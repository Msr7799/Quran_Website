import React, { useState, useRef, useEffect } from "react";
import styles from "../styles/QuranChatBox.module.css";

// ุฃููููุฉ ุงููุฑุขู ุงููุฑูู
const QuranIcon = () => (
  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z" fill="currentColor"/>
    <path d="M12 7C10.9 7 10 7.9 10 9S10.9 11 12 11S14 10.1 14 9S13.1 7 12 7Z" fill="currentColor"/>
    <path d="M7 13H17V15H7V13Z" fill="currentColor"/>
    <path d="M7 16H17V18H7V16Z" fill="currentColor"/>
  </svg>
);

// ุฃููููุฉ ุงูุฅุฑุณุงู
const SendIcon = () => (
  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z" fill="currentColor"/>
  </svg>
);

// ุฃููููุฉ ุงููุตุญู
const MushaafIcon = () => (
  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M18 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V4C20 2.9 19.1 2 18 2ZM18 20H6V4H18V20Z" fill="#2E7D32"/>
    <path d="M8 6H16V8H8V6Z" fill="#2E7D32"/>
    <path d="M8 10H16V12H8V10Z" fill="#2E7D32"/>
    <path d="M8 14H13V16H8V14Z" fill="#2E7D32"/>
  </svg>
);

export const QuranChatBox = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [input, setInput] = useState("");
  const [isTyping, setIsTyping] = useState(false);
  const [conversations, setConversations] = useState([]);
  const messagesEndRef = useRef(null);
  const inputRef = useRef(null);

  // ุชุญููู ุงููุญุงุฏุซุงุช ุงููุญููุธุฉ ุนูุฏ ุจุฏุก ุงูุชุดุบูู
  useEffect(() => {
    const savedConversations = localStorage.getItem('quranChatHistory');
    if (savedConversations) {
      try {
        setConversations(JSON.parse(savedConversations));
      } catch (e) {
        console.error('ูุดู ูู ุชุญููู ุงููุญุงุฏุซุงุช ุงููุญููุธุฉ:', e);
      }
    }
  }, []);

  // ุญูุธ ุงููุญุงุฏุซุงุช ูู ุงูุชุฎุฒูู ุงููุญูู ุนูุฏูุง ุชุชุบูุฑ
  useEffect(() => {
    if (conversations.length > 0) {
      localStorage.setItem('quranChatHistory', JSON.stringify(conversations));
    }
  }, [conversations]);

  // ุงูุชูุฑูุฑ ุฅูู ุขุฎุฑ ุฑุณุงูุฉ ุนูุฏูุง ุชุชุบูุฑ ุงููุญุงุฏุซุงุช ุฃู ุนูุฏ ูุชุญ ุงููุงูุฐุฉ
  useEffect(() => {
    if (isOpen) {
      scrollToBottom();
    }
  }, [conversations, isOpen]);

  // ุงูุชุฑููุฒ ุนูู ุญูู ุงูุฅุฏุฎุงู ุนูุฏ ูุชุญ ุงููุงูุฐุฉ
  useEffect(() => {
    if (isOpen && inputRef.current) {
      inputRef.current.focus();
    }
  }, [isOpen]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const handleToggleChat = () => {
    setIsOpen(!isOpen);
  };

  const handleInputChange = (e) => {
    setInput(e.target.value);
  };

  const handleKeyDown = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const addMessage = (content, sender) => {
    const now = new Date();
    const dateStr = now.toLocaleDateString('ar-SA');
    const timeStr = now.toLocaleTimeString('ar-SA', { hour: '2-digit', minute: '2-digit' });
    
    const newMessage = {
      id: Date.now().toString(),
      content,
      timestamp: timeStr,
      sender
    };

    setConversations(prevConversations => {
      // ุงูุจุญุซ ุนู ูุฌููุนุฉ ุงููุญุงุฏุซุฉ ููููู ุงูุญุงูู
      const todayGroupIndex = prevConversations.findIndex(group => group.date === dateStr);
      
      if (todayGroupIndex > -1) {
        // ุฅุฐุง ูุฌุฏุช ูุฌููุนุฉ ููููู ุงูุญุงููุ ุฃุถู ุงูุฑุณุงูุฉ ุฅูููุง
        const updatedGroups = [...prevConversations];
        updatedGroups[todayGroupIndex] = {
          ...updatedGroups[todayGroupIndex],
          messages: [...updatedGroups[todayGroupIndex].messages, newMessage]
        };
        return updatedGroups;
      } else {
        // ุฅุฐุง ูู ุชูุฌุฏ ูุฌููุนุฉ ููููู ุงูุญุงููุ ุฃูุดุฆ ูุงุญุฏุฉ ุฌุฏูุฏุฉ
        return [
          ...prevConversations,
          { date: dateStr, messages: [newMessage] }
        ];
      }
    });
  };

  // ุฏุงูุฉ ูุญุงูุงุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูููุฑุขู ุงููุฑูู
  const askQuranAI = async (message) => {
    // ูุญุงูุงุฉ ุชุฃุฎูุฑ ุงูุดุจูุฉ
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // ุฑุฏูุฏ ูุญุงูุงุฉ ูููุฑุขู ุงููุฑูู
    const quranResponses = {
      default: "ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชูุ ุฃูุง ูุณุงุนุฏู ูู ูููุน ุงููุฑุขู ุงููุฑูู. ูููููู ูุณุงุนุฏุชู ูู:\n\n๐ ุชูุณูุฑ ุงูุขูุงุช\n๐ ูุนูููุงุช ุนู ุงูุณูุฑ\n๐ต ุงููุฑุงุกุงุช ูุงูุชูุงูุงุช\n๐ ุฃุญูุงู ุงูุชุฌููุฏ\n๐ก ููุงุฆุฏ ูุฑุขููุฉ\n\nููู ูููููู ุฎุฏูุชูุ",
      
      sura: "ูููููู ูุณุงุนุฏุชู ูู ูุนุฑูุฉ ูุนูููุงุช ุดุงููุฉ ุนู ุฃู ุณูุฑุฉ:\n\nโข ุฃุณุจุงุจ ุงููุฒูู\nโข ุงูููุงู: ูููุฉ ุฃู ูุฏููุฉ\nโข ุนุฏุฏ ุงูุขูุงุช ูุงููููุงุช\nโข ุงูููุถูุนุงุช ุงูุฑุฆูุณูุฉ\nโข ุงูุฏุฑูุณ ุงููุณุชูุงุฏุฉ\n\nุฃู ุณูุฑุฉ ุชูุฏ ุฃู ุชุนุฑู ุนููุง ุฃูุซุฑุ",
      
      tafsir: "ุงูุชูุณูุฑ ูู ุจูุงู ูุนุงูู ุงููุฑุขู ุงููุฑูู ูุชูุถูุญ ูุฑุงุฏ ุงููู ุนุฒ ูุฌู. ูู ุฃุดูุฑ ูุชุจ ุงูุชูุณูุฑ:\n\n๐ ุชูุณูุฑ ุงุจู ูุซูุฑ\n๐ ุชูุณูุฑ ุงูุทุจุฑู\n๐ ุชูุณูุฑ ุงููุฑุทุจู\n๐ ุชูุณูุฑ ุงูุณุนุฏู\n\nูู ุชุฑูุฏ ุชูุณูุฑ ุขูุฉ ูุนููุฉ ุฃู ูุนูููุงุช ุนู ูููุฌ ุชูุณูุฑ ูุญุฏุฏุ",
      
      recitation: "ุนุงูู ุงูุชูุงูุฉ ุบูู ุจุงููุฑุงุก ุงูุนุธุงู:\n\n๐๏ธ ุงููุฑุงุก ุงูููุงุณููููู:\nโข ุงูุดูุฎ ุนุจุฏ ุงูุจุงุณุท ุนุจุฏ ุงูุตูุฏ\nโข ุงูุดูุฎ ูุญูุฏ ุตุฏูู ุงูููุดุงูู\nโข ุงูุดูุฎ ูุญููุฏ ุฎููู ุงูุญุตุฑู\n\n๐๏ธ ุงููุฑุงุก ุงููุนุงุตุฑูู:\nโข ุงูุดูุฎ ูุดุงุฑู ุงูุนูุงุณู\nโข ุงูุดูุฎ ูุงูุฑ ุงููุนูููู\nโข ุงูุดูุฎ ุนุจุฏ ุงูุฑุญูู ุงูุณุฏูุณ\n\nุฃู ูุงุฑุฆ ุชูุถู ุฃู ุชุฑูุฏ ุชูุตูุงุช ุญุณุจ ููุน ุงูุชูุงูุฉุ",
      
      ayah: "ูููููู ูุณุงุนุฏุชู ูู:\n\n๐ ุงูุจุญุซ ุนู ุขูุฉ ูุญุฏุฏุฉ\n๐ ุชูุณูุฑ ูุนุงูู ุงูุขูุงุช\n๐ฏ ุฃุณุจุงุจ ุงููุฒูู\n๐ ุงูููุงุฆุฏ ูุงูุญูู\n๐ ุงูุณูุงู ุงููุฑุขูู\n\nุงูุชุจ ุงูุขูุฉ ุฃู ุฌุฒุกูุง ูููุง ูุณุฃุณุงุนุฏู ูู ููููุง ุจุฅุฐู ุงููู.",
      
      dua: "ุฃุฏุนูุฉ ุงููุฑุขู ุงููุฑูู ูููุฒ ุนุธููุฉ:\n\n๐คฒ ูู ุงูุฃุฏุนูุฉ ุงูุฌุงูุนุฉ:\nโข ๏ดฟุฑูุจููููุง ุขุชูููุง ููู ุงูุฏููููููุง ุญูุณูููุฉู ููููู ุงูุขุฎูุฑูุฉู ุญูุณูููุฉู ููููููุง ุนูุฐูุงุจู ุงููููุงุฑู๏ดพ\nโข ๏ดฟุฑูุจููููุง ูุงู ุชูุฒูุบู ูููููุจูููุง ุจูุนูุฏู ุฅูุฐู ููุฏูููุชูููุง๏ดพ\nโข ๏ดฟุฑูุจูู ุงุดูุฑูุญู ููู ุตูุฏูุฑูู ููููุณููุฑู ููู ุฃูููุฑูู๏ดพ\n\nูู ุชุฑูุฏ ุฃุฏุนูุฉ ูููุงุณุจุฉ ูุนููุฉุ",
      
      memorization: "ูุตุงุฆุญ ุฐูุจูุฉ ูุญูุธ ุงููุฑุขู ุงููุฑูู:\n\n๐ ุงููุธุงู ูุงูุซุจุงุช:\nโข ุญุฏุฏ ูุฑุฏูุง ูููููุง ุซุงุจุชูุง\nโข ุงุฎุชุฑ ููุชูุง ูุจุงุฑููุง (ุจุนุฏ ุงููุฌุฑ ูุซูุงู)\n\n๐ ุงููุฑุงุฌุนุฉ:\nโข ุฑุงุฌุน ุงููุญููุธ ูุจู ุงูุญูุธ ุงูุฌุฏูุฏ\nโข ุงุณุชุฎุฏู ูุงุนุฏุฉ: ุงุญูุธ ุตูุญุฉุ ุฑุงุฌุน ุฎูุณ\n\n๐ง ุงูุงุณุชูุงุน:\nโข ุงุฎุชุฑ ูุงุฑุฆูุง ูุงุญุฏูุง ููุญูุธ\nโข ุงุณุชูุน ูุซูุฑูุง ููููุงุทุน ุงููุฑุงุฏ ุญูุธูุง\n\nูู ุชุญูุธ ุญุงูููุง ููุง ูุฏููุ",
      
      tajweed: "ุนูู ุงูุชุฌููุฏ ูุญุณู ุชูุงูุชู:\n\n๐ฏ ุงูุฃุญูุงู ุงูุฃุณุงุณูุฉ:\nโข ุงูููู ุงูุณุงููุฉ ูุงูุชูููู\nโข ุงูููู ุงูุณุงููุฉ\nโข ุฃุญูุงู ุงููุฏ\nโข ุงูููู ูุงูุงุจุชุฏุงุก\n\n๐ ูุตุงุฏุฑ ุงูุชุนูู:\nโข ูุชู ุชุญูุฉ ุงูุฃุทูุงู\nโข ุดุฑุญ ุงูููุธููุฉ ุงูุฌุฒุฑูุฉ\nโข ุงูุชุทุจูู ุงูุนููู ูุน ุดูุฎ\n\nุฃู ุญูู ุชุฑูุฏ ุชุนูููุ",
      
      benefits: "ููุงุฆุฏ ุชุฏุจุฑ ุงููุฑุขู ุนุธููุฉ:\n\n๐ ููุงุฆุฏ ุฑูุญูุฉ:\nโข ุทูุฃูููุฉ ุงูููุจ\nโข ุฒูุงุฏุฉ ุงูุฅููุงู\nโข ุงููุฏุงูุฉ ูุงูููุฑ\n\n๐ ููุงุฆุฏ ุนูููุฉ:\nโข ุญููู ูููุดุงูู\nโข ุชุทููุฑ ุงูุฃุฎูุงู\nโข ุฅุฑุดุงุฏ ูู ุงุชุฎุงุฐ ุงููุฑุงุฑุงุช\n\nูู ุชุฑูุฏ ููุงุฆุฏ ูู ุณูุฑุฉ ุฃู ุขูุฉ ูุนููุฉุ",
      
      search: "ูููููู ูุณุงุนุฏุชู ูู ุงูุจุญุซ ุนู:\n\n๐ ุงูุจุญุซ ุจุงูููุถูุน:\nโข ุขูุงุช ุงูุฏุนุงุก\nโข ูุตุต ุงูุฃูุจูุงุก\nโข ุฃุญูุงู ุดุฑุนูุฉ\n\n๐ ุงูุจุญุซ ุจุงููููุงุช:\nโข ุงุจุญุซ ุนู ูููุฉ ุฃู ุนุจุงุฑุฉ\nโข ุขูุงุช ุชุญุชูู ุนูู ุงุณู ูุนูู\n\nูุง ุงูุฐู ุชุจุญุซ ุนูู ุชุญุฏูุฏูุงุ"
    };

    const lowerMessage = message.toLowerCase();
    
    // ุงูุชุญูู ูู ูููุงุช ูุญุฏุฏุฉ ููุณูุฑ
    if (lowerMessage.includes('ุณูุฑุฉ') || lowerMessage.includes('ุณูุฑู')) {
      return quranResponses.sura;
    } else if (lowerMessage.includes('ุชูุณูุฑ') || lowerMessage.includes('ูุนูู') || lowerMessage.includes('ุดุฑุญ')) {
      return quranResponses.tafsir;
    } else if (lowerMessage.includes('ูุฑุงุกุฉ') || lowerMessage.includes('ูุงุฑุฆ') || lowerMessage.includes('ุชูุงูุฉ') || lowerMessage.includes('ุตูุช')) {
      return quranResponses.recitation;
    } else if (lowerMessage.includes('ุขูุฉ') || lowerMessage.includes('ุงูู') || lowerMessage.includes('ุขูุงุช')) {
      return quranResponses.ayah;
    } else if (lowerMessage.includes('ุฏุนุงุก') || lowerMessage.includes('ุงุฏุนูุฉ') || lowerMessage.includes('ุฏุนุงุก')) {
      return quranResponses.dua;
    } else if (lowerMessage.includes('ุญูุธ') || lowerMessage.includes('ุชุญููุธ') || lowerMessage.includes('ุญุงูุธ')) {
      return quranResponses.memorization;
    } else if (lowerMessage.includes('ุชุฌููุฏ') || lowerMessage.includes('ุงุญูุงู') || lowerMessage.includes('ูุฑุงุกุฉ ุตุญูุญุฉ')) {
      return quranResponses.tajweed;
    } else if (lowerMessage.includes('ูุงุฆุฏุฉ') || lowerMessage.includes('ููุงุฆุฏ') || lowerMessage.includes('ุญููุฉ') || lowerMessage.includes('ุฏุฑุณ')) {
      return quranResponses.benefits;
    } else if (lowerMessage.includes('ุจุญุซ') || lowerMessage.includes('ุงุจุญุซ') || lowerMessage.includes('ุงุฌุฏ') || lowerMessage.includes('ุงูู')) {
      return quranResponses.search;
    } else if (lowerMessage.includes('ุงูุณูุงู') || lowerMessage.includes('ูุฑุญุจุง') || lowerMessage.includes('ุฃููุง')) {
      return "ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชูุ ุฃููุงู ูุณููุงู ุจู ูู ูููุน ุงููุฑุขู ุงููุฑูู. " + quranResponses.default;
    } else if (lowerMessage.includes('ุดูุฑุง') || lowerMessage.includes('ุฌุฒุงู ุงููู')) {
      return "ูุฅูุงููุ ุจุงุฑู ุงููู ูููู. ูู ุชุญุชุงุฌูู ููุณุงุนุฏุฉ ุฃุฎุฑู ูู ุชุนูู ุฃู ููู ุงููุฑุขู ุงููุฑููุ";
    } else {
      return quranResponses.default;
    }
  };

  const handleSendMessage = async () => {
    if (!input.trim()) return;
    
    const userMessage = input.trim();
    setInput('');
    
    // ุฅุถุงูุฉ ุฑุณุงูุฉ ุงููุณุชุฎุฏู
    addMessage(userMessage, 'user');
    
    // ุนุฑุถ ูุคุดุฑ ุงููุชุงุจุฉ
    setIsTyping(true);
    
    try {
      // ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุฅูู ูุณุงุนุฏ ุงููุฑุขู ุงููุฑูู ูุงูุญุตูู ุนูู ุงูุฑุฏ
      const aiResponse = await askQuranAI(userMessage);
      
      // ุฅุถุงูุฉ ุฑุฏ ุงููุณุงุนุฏ ุจุนุฏ ุชุฃุฎูุฑ ูุตูุฑ ูุฅุธูุงุฑ ุชุฃุซูุฑ ุงููุชุงุจุฉ
      setTimeout(() => {
        setIsTyping(false);
        addMessage(aiResponse, 'ai');
      }, 500);
    } catch (error) {
      console.error('ุฎุทุฃ ูู ุงูุงุชุตุงู ุจูุณุงุนุฏ ุงููุฑุขู ุงููุฑูู:', error);
      
      setTimeout(() => {
        setIsTyping(false);
        addMessage('ุนุฐุฑูุงุ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุงูุงุชุตุงู ุจูุณุงุนุฏ ุงููุฑุขู ุงููุฑูู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.', 'ai');
      }, 500);
    }
  };

  const clearConversation = () => {
    if (window.confirm('ูู ุฃูุช ูุชุฃูุฏ ุฃูู ุชุฑูุฏ ูุณุญ ุฌููุน ุงููุญุงุฏุซุงุชุ')) {
      setConversations([]);
      localStorage.removeItem('quranChatHistory');
    }
  };

  return (
    <div className={styles.quranChatContainer}>
      {/* ุฒุฑ ูุชุญ ุงูุฏุฑุฏุดุฉ */}
      <button 
        onClick={handleToggleChat}
        className={styles.chatButton}
        title="ูุณุงุนุฏ ุงููุฑุขู ุงููุฑูู"
      >
        <QuranIcon />
      </button>
      
      {/* ูุงูุฐุฉ ุงูุฏุฑุฏุดุฉ */}
      <div 
        className={`${styles.chatWindow} ${isOpen ? '' : styles.collapsed}`}
      >
        {/* ุฑุฃุณ ุงููุงูุฐุฉ */}
        <div className={styles.chatHeader}>
          <div className={styles.chatTitle}>
            <MushaafIcon />
            <div>
              <div>ูุณุงุนุฏ ุงููุฑุขู ุงููุฑูู</div>
              <div className={styles.chatSubtitle}>ูู ุฎุฏูุฉ ูุชุงุจ ุงููู</div>
            </div>
          </div>
          <div className={styles.chatControls}>
            {/* ุฒุฑ ูุณุญ ุงููุญุงุฏุซุฉ */}
            <button 
              onClick={clearConversation}
              className={styles.controlButton}
              title="ูุณุญ ุงููุญุงุฏุซุฉ"
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM19 4H15.5L14.5 3H9.5L8.5 4H5V6H19V4Z" fill="currentColor"/>
              </svg>
            </button>
            {/* ุฒุฑ ุฅุบูุงู */}
            <button 
              onClick={handleToggleChat}
              className={styles.controlButton}
              title="ุฅุบูุงู"
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z" fill="currentColor"/>
              </svg>
            </button>
          </div>
        </div>
        
        {/* ููุทูุฉ ุงููุญุงุฏุซุงุช */}
        <div className={styles.conversationArea}>
          {conversations.length === 0 && (
            <div className={styles.emptyState}>
              <div className={styles.emptyIcon}>
                <MushaafIcon />
              </div>
              <div className={styles.emptyTitle}>ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู</div>
              <div className={styles.emptySubtitle}>ููู ูููููู ูุณุงุนุฏุชู ูู ุชุนูู ุงููุฑุขู ุงููุฑููุ</div>
            </div>
          )}
          
          {conversations.map((group) => (
            <React.Fragment key={group.date}>
              <div className={styles.dateSeparator}>
                <span className={styles.dateBadge}>{group.date}</span>
              </div>
              <div className={styles.messageGroup}>
                {group.messages.map((message) => (
                  <div
                    key={message.id}
                    className={`${styles.messageContainer} ${styles[message.sender]}`}
                  >
                    <div className={`${styles.messageBubble} ${styles[message.sender]}`}>
                      <div>{message.content}</div>
                      <div className={`${styles.messageTimestamp} ${styles[message.sender]}`}>
                        {message.timestamp}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </React.Fragment>
          ))}
          
          {/* ูุคุดุฑ ุงููุชุงุจุฉ */}
          {isTyping && (
            <div className={`${styles.messageContainer} ${styles.ai}`}>
              <div className={styles.typingIndicator}>
                <div className={styles.typingDot}></div>
                <div className={styles.typingDot}></div>
                <div className={styles.typingDot}></div>
              </div>
            </div>
          )}
          
          <div ref={messagesEndRef} />
        </div>
        
        {/* ููุทูุฉ ุงูุฅุฏุฎุงู */}
        <div className={styles.chatInputArea}>
          <div className={styles.inputContainer}>
            <textarea
              ref={inputRef}
              value={input}
              onChange={handleInputChange}
              onKeyDown={handleKeyDown}
              placeholder="ุงุณุฃู ุนู ุงููุฑุขู ุงููุฑูู..."
              className={styles.messageInput}
              rows={2}
            />
            <button
              onClick={handleSendMessage}
              disabled={!input.trim() || isTyping}
              className={styles.sendButton}
            >
              <SendIcon />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};
