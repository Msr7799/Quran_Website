import validator from 'validator';
import { addSubscriber } from '../../utils/mongoDataStorage.js';
import { sendWelcomeEmail } from '../../utils/emailSender.js';

export default async function handler(req, res) {
  // ููุท POST requests
  if (req.method !== 'POST') {
    return res.status(405).json({ 
      ok: false, 
      message: 'Method not allowed' 
    });
  }

  try {
    const { email } = req.body;

    // ุงูุชุญูู ูู ูุฌูุฏ ุงูุฅูููู
    if (!email) {
      return res.status(400).json({ 
        ok: false, 
        message: 'ูุฑุฌู ุฅุฏุฎุงู ุจุฑูุฏ ุฅููุชุฑููู' 
      });
    }

    // ุงูุชุญูู ูู ุตุญุฉ ุงูุฅูููู
    if (!validator.isEmail(email.trim())) {
      return res.status(400).json({ 
        ok: false, 
        message: 'ูุฑุฌู ุฅุฏุฎุงู ุจุฑูุฏ ุฅููุชุฑููู ุตุญูุญ' 
      });
    }

    const cleanEmail = email.trim().toLowerCase();

    // ุฅุถุงูุฉ ุงููุดุชุฑู ููุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุญููุฉ
    try {
      await addSubscriber(cleanEmail);
    } catch (error) {
      if (error.message.includes('ูุดุชุฑู ุจุงููุนู')) {
        return res.status(409).json({ 
          ok: false, 
          message: 'ูุฐุง ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุดุชุฑู ุจุงููุนู',
          exists: true,
          email: cleanEmail,
          action: 'already_subscribed'
        });
      }
      throw error;
    }

    // ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุฑุญูุจ
    try {
      await sendWelcomeEmail(cleanEmail);
      console.log('โ ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุฑุญูุจ ุจูุฌุงุญ');
      
      // ุฅุฑุณุงู ุงูุญุฏูุซ ุงูุฃูู ููุฑุงู (ุญู ููุดููุฉ setTimeout ูู serverless)
      try {
        const axios = require('axios');
        
        // ุฌูุจ ุญุฏูุซ ุนุดูุงุฆู
        const books = ['bukhari', 'muslim'];
        const randomBook = books[Math.floor(Math.random() * books.length)];
        
        const hadithResponse = await axios.get('https://hadithapi.com/api/hadiths', {
          params: {
            apiKey: process.env.HADITH_API_KEY,
            book: randomBook,
            random: 1
          },
          timeout: 10000
        });

        if (hadithResponse.data && hadithResponse.data.hadiths && hadithResponse.data.hadiths.length > 0) {
          const hadith = hadithResponse.data.hadiths[0];
          
          // ุฅุฑุณุงู ุงูุญุฏูุซ ุงูุฃูู
          const { sendDailyHadithToSubscriber } = await import('../../utils/emailSender.js');
          const result = await sendDailyHadithToSubscriber(cleanEmail, hadith);
          
          if (result.success) {
            console.log('โ ุชู ุฅุฑุณุงู ุงูุญุฏูุซ ุงูุฃูู ุจูุฌุงุญ ูููุดุชุฑู:', cleanEmail);
          } else {
            console.error('โ ูุดู ูู ุฅุฑุณุงู ุงูุญุฏูุซ ุงูุฃูู:', result.error);
          }
        }
      } catch (hadithError) {
        console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุญุฏูุซ ุงูุฃูู:', hadithError);
        // ูุง ูููู ุงูุนูููุฉ ูู ุญุงู ูุดู ุงูุญุฏูุซ
      }
      
      console.log('๐ง ุงุดุชุฑุงู ุฌุฏูุฏ ูุฌุญ:', cleanEmail);
      
      return res.status(200).json({ 
        ok: true, 
        message: 'ุชู ุงูุงุดุชุฑุงู ุจูุฌุงุญ! ุณุชุตูู ุฑุณุงูุฉ ุชุฑุญูุจ ูุฃูู ุญุฏูุซ ููุฑุงู' 
      });
    } catch (emailError) {
      console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุฑุญูุจ:', emailError);
      
      // ูุญุงูู ุญุฐู ุงููุดุชุฑู ุฅุฐุง ูุดู ุงูุฅูููู
      try {
        const { removeSubscriber } = await import('../../utils/mongoDataStorage.js');
        await removeSubscriber(cleanEmail);
      } catch (removeError) {
        console.error('โ ุฎุทุฃ ูู ุญุฐู ุงููุดุชุฑู ุจุนุฏ ูุดู ุงูุฅูููู:', removeError);
      }
      
      return res.status(500).json({ 
        ok: false, 
        message: 'ุชู ุงูุงุดุชุฑุงู ูููู ูุดู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุฑุญูุจ. ุชุฃูุฏ ูู ุฅุนุฏุงุฏุงุช ุงูุจุฑูุฏ ุงูุฅููุชุฑููู.' 
      });
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุดุชุฑุงู:', error);
    return res.status(500).json({ 
      ok: false, 
      message: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุงุดุชุฑุงู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู ูุงุญูุงู.' 
    });
  }
}
