import validator from 'validator';
import { addSubscriber, checkSubscriptionStatus } from '../../utils/mongoDataStorage.js';
import { sendWelcomeEmail } from '../../utils/emailSender.js';

export default async function handler(req, res) {
  // ููุท POST requests
  if (req.method !== 'POST') {
    return res.status(405).json({ 
      ok: false, 
      message: 'Method not allowed' 
    });
  }

  try {
    const { email } = req.body;

    // ุงูุชุญูู ูู ูุฌูุฏ ุงูุฅูููู
    if (!email) {
      return res.status(400).json({ 
        ok: false, 
        message: 'ูุฑุฌู ุฅุฏุฎุงู ุจุฑูุฏ ุฅููุชุฑููู' 
      });
    }

    // ุงูุชุญูู ูู ุตุญุฉ ุงูุฅูููู
    if (!validator.isEmail(email.trim())) {
      return res.status(400).json({ 
        ok: false, 
        message: 'ูุฑุฌู ุฅุฏุฎุงู ุจุฑูุฏ ุฅููุชุฑููู ุตุญูุญ' 
      });
    }

    const cleanEmail = email.trim().toLowerCase();

    // ุงูุชุญูู ูู ุญุงูุฉ ุงูุงุดุชุฑุงู ุงูุญุงููุฉ
    const subscriptionStatus = await checkSubscriptionStatus(cleanEmail);
    
    if (subscriptionStatus.exists && subscriptionStatus.isActive) {
      return res.status(409).json({ 
        ok: false, 
        message: 'ูุฐุง ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุดุชุฑู ุจุงููุนู',
        exists: true,
        email: cleanEmail,
        action: 'already_subscribed'
      });
    }

    // ุฅุถุงูุฉ ุงููุดุชุฑู ููุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุญููุฉ
    try {
      await addSubscriber(cleanEmail);
    } catch (error) {
      if (error.message.includes('ูุดุชุฑู ุจุงููุนู')) {
        return res.status(409).json({ 
          ok: false, 
          message: 'ูุฐุง ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุดุชุฑู ุจุงููุนู',
          exists: true,
          email: cleanEmail,
          action: 'already_subscribed'
        });
      }
      throw error;
    }

    // ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุฑุญูุจ
    try {
      await sendWelcomeEmail(cleanEmail);
      console.log('โ ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุฑุญูุจ ุจูุฌุงุญ');
      
      // ุฅุฑุณุงู ุฃูู ุญุฏูุซ ุจุนุฏ 10 ุซูุงูู (ูุฏุฉ ูุตูุฑุฉ ูููุซููุฉ)
      setTimeout(async () => {
        try {
          console.log('๐ ุจุฏุก ุฅุฑุณุงู ุฃูู ุญุฏูุซ ูููุดุชุฑู ุงูุฌุฏูุฏ:', cleanEmail);
          
          // ุงุณุชุฏุนุงุก API ูููุนุงูุฌุฉ
          const response = await fetch(`${process.env.SITE_URL || process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000'}/api/send-first-hadith`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email: cleanEmail })
          });
          
          const result = await response.json();
          if (result.ok) {
            console.log('โ ุชู ุฅุฑุณุงู ุฃูู ุญุฏูุซ ุจูุฌุงุญ ูููุดุชุฑู:', cleanEmail);
          } else {
            console.error('โ ูุดู ูู ุฅุฑุณุงู ุฃูู ุญุฏูุซ:', result.message);
          }
        } catch (error) {
          console.error('โ ุฎุทุฃ ูู ุงุณุชุฏุนุงุก ุฅุฑุณุงู ุฃูู ุญุฏูุซ:', error.message);
        }
      }, 10 * 1000); // 10 ุซูุงูู
      
      console.log('๐ง ุงุดุชุฑุงู ุฌุฏูุฏ ูุฌุญ:', cleanEmail);
      console.log('โฑ๏ธ ุณูุชู ุฅุฑุณุงู ุฃูู ุญุฏูุซ ุฎูุงู 10 ุซูุงูู');
      
      return res.status(200).json({ 
        ok: true, 
        message: 'ุชู ุงูุงุดุชุฑุงู ุจูุฌุงุญ! ุณุชุตูู ุฑุณุงูุฉ ุชุฑุญูุจ ููุฑุงู ูุฃูู ุญุฏูุซ ุฎูุงู 10 ุซูุงูู' 
      });
    } catch (emailError) {
      console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุฑุญูุจ:', emailError);
      
      // ูุญุงูู ุญุฐู ุงููุดุชุฑู ุฅุฐุง ูุดู ุงูุฅูููู
      try {
        const { removeSubscriber } = await import('../../utils/mongoDataStorage.js');
        await removeSubscriber(cleanEmail);
      } catch (removeError) {
        console.error('โ ุฎุทุฃ ูู ุญุฐู ุงููุดุชุฑู ุจุนุฏ ูุดู ุงูุฅูููู:', removeError);
      }
      
      return res.status(500).json({ 
        ok: false, 
        message: 'ุชู ุงูุงุดุชุฑุงู ูููู ูุดู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุฑุญูุจ. ุชุฃูุฏ ูู ุฅุนุฏุงุฏุงุช ุงูุจุฑูุฏ ุงูุฅููุชุฑููู.' 
      });
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุดุชุฑุงู:', error);
    return res.status(500).json({ 
      ok: false, 
      message: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุงุดุชุฑุงู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู ูุงุญูุงู.' 
    });
  }
}
