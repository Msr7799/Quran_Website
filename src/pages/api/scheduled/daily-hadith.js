// API endpoint ููุฅุฑุณุงู ุงููููู ุงูุฐูู - ุจุฏูู Cron Jobs
// ูุนูู ุนูุฏ ุงูุงุณุชุฏุนุงุก ูููุญุต MongoDB ุฅุฐุง ุชู ุงูุฅุฑุณุงู ุงูููู ุฃู ูุง

import { getSubscribers, checkTodayHadithSent, markTodayHadithSent } from '../../../utils/mongoDataStorage.js';
import { sendDailyHadithToAll } from '../../../utils/emailSender.js';

export default async function handler(req, res) {
  // ุฏุนู GET ู POST
  if (req.method !== 'GET' && req.method !== 'POST') {
    return res.status(405).json({ 
      ok: false, 
      message: 'Method not allowed' 
    });
  }

  try {
    console.log('๐ ูุญุต ูุธุงู ุงูุฅุฑุณุงู ุงููููู ุงูุฐูู...');

    // ูุญุต ูู ุชู ุงูุฅุฑุณุงู ุงูููู ูู MongoDB
    const alreadySentToday = await checkTodayHadithSent();
    
    if (alreadySentToday) {
      console.log('โ ุชู ุฅุฑุณุงู ุงูุญุฏูุซ ุงููููู ุจุงููุนู ุงูููู');
      return res.status(200).json({ 
        ok: true, 
        message: 'ุชู ุฅุฑุณุงู ุงูุญุฏูุซ ุงููููู ุจุงููุนู ุงูููู',
        alreadySent: true,
        date: new Date().toDateString()
      });
    }

    console.log('๐ ูู ูุชู ุงูุฅุฑุณุงู ุงูููู - ุจุฏุก ุงูุฅุฑุณุงู...');

    // ุงูุญุตูู ุนูู ูุงุฆูุฉ ุงููุดุชุฑููู
    const subscribers = await getSubscribers();
    
    if (subscribers.length === 0) {
      console.log('๐ฅ ูุง ููุฌุฏ ูุดุชุฑููู ุญุงููุงู');
      return res.status(200).json({ 
        ok: true, 
        message: 'ูุง ููุฌุฏ ูุดุชุฑููู ุญุงููุงู',
        stats: { total: 0, successful: 0, failed: 0 }
      });
    }

    console.log(`๐ฅ ุนุฏุฏ ุงููุดุชุฑููู: ${subscribers.length}`);

    // ุฌูุจ ุญุฏูุซ ุนุดูุงุฆู ุนุจุฑ dynamic import
    let hadith;
    try {
      console.log('๐ ุฌูุจ ุญุฏูุซ ูู ุงููููุงุช ุงููุญููุฉ...');
      
      // Dynamic import ูุชุฌูุจ ูุดุงูู build
      const hadithReader = (await import('../../../utils/hadithDataReader.js')).default;
      
      // ุงุฎุชูุงุฑ ุนุดูุงุฆู ุจูู ุงูุจุฎุงุฑู ููุณูู
      const sources = ['ุงูุจุฎุงุฑู', 'ูุณูู'];
      const randomSource = sources[Math.floor(Math.random() * sources.length)];
      
      // ูุญุงููุฉ ุงูุญุตูู ุนูู ุญุฏูุซ ูู ุงููุตุฏุฑ ุงููุญุฏุฏ
      hadith = await hadithReader.getRandomHadith(randomSource);
      
      console.log('โ ุชู ุฌูุจ ุงูุญุฏูุซ ูู:', hadith.book);
      console.log('๐ ุจุฏุงูุฉ ุงูุญุฏูุซ:', hadith.hadithText?.substring(0, 100) + '...');

    } catch (localError) {
      console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงูุญุฏูุซ ูู ุงููููุงุช ุงููุญููุฉ:', localError.message);
      
      try {
        // ูุญุงููุฉ ุงูุญุตูู ุนูู ุฃู ุญุฏูุซ ุนุดูุงุฆู (ุจุฏูู ุชุญุฏูุฏ ูุตุฏุฑ)
        console.log('๐ ูุญุงููุฉ ุงูุญุตูู ุนูู ุญุฏูุซ ุนุดูุงุฆู ูู ุฃู ูุตุฏุฑ...');
        hadith = await hadithReader.getRandomHadith();
        console.log('โ ุชู ุฌูุจ ุญุฏูุซ ุนุดูุงุฆู ูู:', hadith.book);
        
      } catch (fallbackError) {
        console.error('โ ูุดู ูู ุฌูุจ ุงูุญุฏูุซ ูู ุงููููุงุช ุงููุญููุฉ:', fallbackError.message);
        
        // ุญุฏูุซ ุงุญุชูุงุทู ุซุงุจุช ูู ุญุงูุฉ ูุดู ุฌููุน ุงููุญุงููุงุช
        hadith = {
          hadithText: 'ุนู ุฃุจู ูุฑูุฑุฉ ุฑุถู ุงููู ุนูู ูุงู: ูุงู ุฑุณูู ุงููู ุตูู ุงููู ุนููู ูุณูู: "ูููุชุงู ุฎูููุชุงู ุนูู ุงููุณุงูุ ุซูููุชุงู ูู ุงูููุฒุงูุ ุญุจูุจุชุงู ุฅูู ุงูุฑุญูู: ุณุจุญุงู ุงููู ูุจุญูุฏูุ ุณุจุญุงู ุงููู ุงูุนุธูู"',
          book: 'ุตุญูุญ ุงูุจุฎุงุฑู',
          englishNarrator: 'ุฃุจู ูุฑูุฑุฉ ุฑุถู ุงููู ุนูู',
          hadithNumber: '6406',
          chapter: 'ูุชุงุจ ุงูุฏุนูุงุช'
        };
        console.log('๐ ุงุณุชุฎุฏุงู ุญุฏูุซ ุงุญุชูุงุทู ุซุงุจุช');
      }
    }

    // ุฅุฑุณุงู ุงูุญุฏูุซ ูุฌููุน ุงููุดุชุฑููู
    console.log('๐ค ุจุฏุก ุฅุฑุณุงู ุงูุญุฏูุซ ุงููููู ูููุดุชุฑููู...');
    
    const result = await sendDailyHadithToAll(hadith);
    
    if (result.success) {
      // ุชุณุฌูู ุงูุฅุฑุณุงู ูู MongoDB ูุชุฌูุจ ุงูุชูุฑุงุฑ
      const hadithData = {
        book: hadith.book,
        text: hadith.hadithText?.substring(0, 200),
        subscribersCount: result.totalSent
      };
      
      await markTodayHadithSent(hadithData);
      
      console.log(`โ ุชู ุฅุฑุณุงู ุงูุญุฏูุซ ุงููููู ุจูุฌุงุญ ุฅูู ${result.totalSent} ูุดุชุฑู`);
      console.log(`โ ูุดู ุงูุฅุฑุณุงู ูู ${result.totalFailed} ูุดุชุฑู`);
      console.log('๐พ ุชู ุชุณุฌูู ุงูุฅุฑุณุงู ูู MongoDB');
      
      return res.status(200).json({ 
        ok: true, 
        message: 'ุชู ุฅุฑุณุงู ุงูุญุฏูุซ ุงููููู ุจูุฌุงุญ ูุชุณุฌููู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช',
        stats: {
          total: subscribers.length,
          successful: result.totalSent,
          failed: result.totalFailed
        },
        hadith: {
          source: hadith.book,
          preview: hadith.hadithText?.substring(0, 150) + '...'
        },
        date: new Date().toDateString()
      });
    } else {
      throw new Error('ูุดู ูู ุฅุฑุณุงู ุงูุญุฏูุซ ุงููููู');
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุฅุฑุณุงู ุงููููู ุงูุฐูู:', error);
    
    return res.status(500).json({ 
      ok: false, 
      message: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุฅุฑุณุงู ุงููููู ุงูุฐูู',
      error: error.message
    });
  }
}
